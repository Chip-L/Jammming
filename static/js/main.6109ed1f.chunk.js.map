{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Track/Track.js","components/TrackList/TrackList.js","components/SearchResults/SearchResults.js","components/Playlist/Playlist.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SearchBar","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","handleTermChange","bind","assertThisInitialized","search","inherits","createClass","key","value","e","target","setState","onSearch","react_default","a","createElement","className","onChange","placeholder","onClick","React","Component","Track","renderAction","addTrack","removeTrack","event","onAdd","trackInfo","onRemove","isRemoval","name","artist","album","TrackList","apply","arguments","listOfTracks","tracklist","map","track","Track_Track_Track","id","SearchResults","TrackList_TrackList_TrackList","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playListTracks","onSave","App","playListName","uri","updatePlaylistName","savePlaylist","trackList","find","savedTrack","push","playlist","filter","listTrack","trackURIs","console","log","SearchBar_SearchBar_SearchBar","SearchResults_SearchResults_SearchResults","Playlist_Playlist_Playlist","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6109ed1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: ''\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  handleTermChange(e) {\r\n    let term = e.target.value;\r\n    this.setState({ term: term });\r\n  }\r\n\r\n  search() {\r\n    this.props.onSearch(this.state.term)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <input onChange={this.handleTermChange} placeholder=\"Enter A Song, Album, or Artist\" />\r\n        <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport './Track.css';\r\n\r\nexport class Track extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderAction = this.renderAction.bind(this);\r\n\r\n    this.addTrack=this.addTrack.bind(this);\r\n    this.removeTrack=this.removeTrack.bind(this);\r\n  }\r\n\r\n  addTrack(event) {\r\n    this.props.onAdd(this.props.trackInfo);\r\n  }\r\n\r\n  removeTrack(event) {\r\n    this.props.onRemove(this.props.trackInfo);\r\n  }\r\n\r\n  renderAction() {\r\n    if (this.props.isRemoval) {\r\n      return  <a className=\"Track-action\" onClick={this.removeTrack} >-</a>;\r\n    };\r\n    return <a className=\"Track-action\" onClick={this.addTrack} >+</a>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h3> {this.props.trackInfo.name} </h3>\r\n          <p> {this.props.trackInfo.artist} | {this.props.trackInfo.album} </p>\r\n        </div>\r\n        {this.renderAction()}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n/*\r\n*/\r\n","import React from 'react';\r\nimport {Track} from '../Track/Track';\r\n\r\nimport './TrackList.css';\r\n\r\nexport class TrackList extends React.Component {\r\n  render() {\r\n    let listOfTracks;\r\n    if(this.props.tracklist) {\r\n      listOfTracks = this.props.tracklist.map((track) => {\r\n        return(\r\n          <Track\r\n            key={track.id}\r\n            trackInfo={track}\r\n            onAdd={this.props.onAdd}\r\n            onRemove={this.props.onRemove}\r\n            isRemoval={this.props.isRemoval}\r\n          />\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div className=\"TrackList\">\r\n        {listOfTracks}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n/*        {this.props.tracklist.map((track) => {\r\n  return(\r\n    <Track trackInfo={track} key={track.id} />\r\n  );\r\n})} */\r\n","import React from 'react';\r\nimport {TrackList} from '../TrackList/TrackList';\r\n\r\nimport './SearchResults.css';\r\n\r\nexport class SearchResults extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchResults\">\r\n        <h2>Results</h2>\r\n        <TrackList\r\n          tracklist={this.props.searchResults}\r\n          onAdd={this.props.onAdd}\r\n          isRemoval={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {TrackList} from '../TrackList/TrackList';\r\nimport './Playlist.css';\r\n\r\nexport class Playlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    let name = e.target.value;\r\n\r\n    this.props.onNameChange(name);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input onChange={this.handleNameChange} defaultValue={'New Playlist'} />\r\n        <TrackList\r\n          tracklist={this.props.playListTracks}\r\n          onRemove={this.props.onRemove}\r\n          isRemoval={true}\r\n        />\r\n        <button className=\"Playlist-save\" onClick={this.props.onSave} >\r\n          SAVE TO SPOTIFY\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\nimport {SearchBar} from '../SearchBar/SearchBar';\nimport {SearchResults} from '../SearchResults/SearchResults';\nimport {Playlist} from '../Playlist/Playlist';\n\nimport './App.css';\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      playListName: 'New Playlist',\n      playListTracks: [{name: 'Material Girl',\n                        artist: 'Madonna',\n                        album: 'Like a Virgin',\n                        id: 1,\n                        uri: '123a1'\n                       },\n                       {name: 'Like a Virgin',\n                        artist: 'Madonna',\n                        album: 'Like a Virgin',\n                        id: 2,\n                        uri: '123a2'\n                      }],\n      searchResults: [{name: 'Material Girl 3',\n                       artist: 'Madonna',\n                       album: 'Like a Virgin',\n                       id: 3,\n                       uri: '123a3'\n                      },\n                      {name: 'Like a Virgin 4',\n                       artist: 'Madonna',\n                       album: 'Like a Virgin',\n                       id: 4,\n                       uri: '123a4'\n                     }],\n\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack =  this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let trackList = this.state.playListTracks;\n\n    if(!trackList.find((savedTrack) => savedTrack.id === track.id)) {\n      trackList.push(track);\n      this.setState({playlist: trackList});\n    };\n  }\n\n  removeTrack(track) {\n    let trackList =\n      this.state.playListTracks.filter(listTrack => listTrack.id !== track.id);\n\n    this.setState({playListTracks: trackList});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playListName: name});\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playListTracks.map(track => track.uri);\n    console.log('trackURIs: ' + trackURIs);\n  }\n\n  search(term) {\n    console.log('Search term: ' + term);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playListName={this.state.playListName}\n              playListTracks={this.state.playListTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}